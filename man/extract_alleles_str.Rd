% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_alleles.R
\name{extract_alleles_str}
\alias{extract_alleles_str}
\alias{extract_alleles_df}
\title{Split an HLA typing string into alleles}
\usage{
extract_alleles_str(
  string,
  loci = c("A", "B", "C", "DPB1", "DQA1", "DQB1", "DRB1", "DRB."),
  strip_locus = TRUE
)

extract_alleles_df(
  df,
  col_typing,
  loci = c("A", "B", "C", "DPB1", "DQA1", "DQB1", "DRB1", "DRB."),
  strip_locus = TRUE
)
}
\arguments{
\item{string}{String, space-separated HLA typing.}

\item{loci}{A string or character vector with the loci you are interested in.
Only these alleles will be returned. Defaults to all. \code{DRB.} is used for
DRB3, DRB4, and DRB5.}

\item{strip_locus}{Include the locus in the output or remove it?
\itemize{
\item If \code{TRUE} (the default), the locus will be removed from the extracted
alleles.
\item If \code{FALSE}, will retain the locus as it was in the original typing.
}}

\item{df}{A data frame.}

\item{col_typing}{The column in \code{df} that contains a space-separated HLA
typing \code{string} for each row.}
}
\value{
Either a character vector or a data frame with the named alleles.
}
\description{
Takes in a space-separated HLA typing string and splits it into
its constituent loci and alleles ("A_1", "A_2", "DRB1_1").

\code{extract_alleles_str()} takes in a single string, and returns a named
character vector of alleles.

\code{extract_alleles_df()} takes in a data frame, where one column contains the
typing string, and returns the same data frame along with a new column for
each allele.
}
\examples{
typing <- "A1 A2 B7 B8 Cw3 DQ5 DQ8 DR4 DR11 DR52 DR53"
extract_alleles_str(typing, loci = "A")
extract_alleles_str(typing)

df <- tidyr::tibble(typing = typing)
extract_alleles_df(df, typing, loci = c("A", "B", "C"))

# Can also handle newer nomenclature
extract_alleles_str("DQB1*03:01 DQB1*05:01 DRB1*04:AMR",
  loci = c("DRB1", "DQB1")
)
}
