% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipd_db.R
\name{is_in_ipd_db}
\alias{is_in_ipd_db}
\title{Lookup whether allele exists in IPD-IMGT/HLA database}
\usage{
is_in_ipd_db(ard, allele)
}
\arguments{
\item{ard}{The Python database connection object created by \code{\link[=db_initialize]{db_initialize()}}}

\item{allele}{A string or character vector with (an) HLA allele(s).}
}
\value{
A Boolean or logical vector with the same length as \code{allele}, with
\code{TRUE} (allele exists in database) or \code{FALSE} for each element.
}
\description{
\code{is_in_ipd_db()} checks whether an HLA allele has been entered into the
\href{https://www.ebi.ac.uk/ipd/imgt/hla/}{IPD-IMGT/HLA database} as
initialized with \code{\link[=db_initialize]{db_initialize()}}. This function is a thin wrapper around
the \code{ard.validate()} method of the
\href{https://github.com/nmdp-bioinformatics/py-ard}{\code{py-ard}} Python package.
}
\examples{
\dontrun{
ard <- db_initialize(data_dir = path.expand("~/ipd_db"))
is_in_ipd_db(ard, "A*01:01")
#> TRUE
is_in_ipd_db(ard, "A1")
#> TRUE
is_in_ipd_db(ard, "A20")
#> FALSE
is_in_ipd_db(ard, "A*99:99")
#> FALSE
# Also works for vectors:
is_in_ipd_db(ard, c("A*01:AB", "XYZ*01:03"))
#> TRUE FALSE
}
}
