% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipd_db.R
\name{reduce_to_serology}
\alias{reduce_to_serology}
\title{Retrieve serological equivalents of HLA alleles}
\usage{
reduce_to_serology(ard, allele)
}
\arguments{
\item{ard}{The Python database connection object created by \code{\link[=db_initialize]{db_initialize()}}}

\item{allele}{A string or character vector with (an) HLA allele(s).}
}
\value{
A string or character vector of the same length as \code{allele},
with the corresponding serology if it exists, or "" if none exists (e.g.
for null alleles)
}
\description{
\code{reduce_to_serology()} is a thin wrapper around the \code{ard.redux()} method
(Reduction Type \code{'S'}) of the
\href{https://github.com/nmdp-bioinformatics/py-ard}{\code{py-ard}} Python package.
}
\details{
Uses the \href{https://www.ebi.ac.uk/ipd/imgt/hla/}{IPD-IMGT/HLA database} as
initialized with \code{\link[=db_initialize]{db_initialize()}}. This function will throw an error if any
of the alleles in the input do not exist in the database. Use
\code{\link[=is_in_ipd_db]{is_in_ipd_db()}} to safely check if the allele(s) exist(s).
}
\examples{
\dontrun{
ard <- db_initialize(data_dir = path.expand("~/ipd_db"))
reduce_to_serology(ard, "B*13:03")
#> "B13"
reduce_to_serology(ard, "B*13:04")
#> "B15/B21"
# Also works for vectors:
reduce_to_serology(ard, c("B*13:03", "B*13:04"))
#> "B13"     "B15/B21"
}
}
\seealso{
\code{\link[=reduce_to_field2]{reduce_to_field2()}} to reduce an allele to two-field resolution
}
